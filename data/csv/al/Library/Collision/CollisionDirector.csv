Mangled Symbol, Demangled Symbol, Is Matched
"_ZN2al17CollisionDirectorC1EPNS_15ExecuteDirectorE","al::CollisionDirector::CollisionDirector(al::ExecuteDirector *)",false
"_ZN2al17CollisionDirector14setPartsKeeperEPNS_21ICollisionPartsKeeperE","al::CollisionDirector::setPartsKeeper(al::ICollisionPartsKeeper *)",false
"_ZN2al17CollisionDirector7endInitEv","al::CollisionDirector::endInit(void)",false
"_ZN2al17CollisionDirector14setPartsFilterEPKNS_24CollisionPartsFilterBaseE","al::CollisionDirector::setPartsFilter(al::CollisionPartsFilterBase const*)",false
"_ZN2al17CollisionDirector12setTriFilterEPKNS_18TriangleFilterBaseE","al::CollisionDirector::setTriFilter(al::TriangleFilterBase const*)",false
"_ZN2al17CollisionDirector16checkStrikePointERKN4sead7Vector3IfEEPNS_7HitInfoE","al::CollisionDirector::checkStrikePoint(sead::Vector3<float> const&,al::HitInfo *)",false
"_ZN2al17CollisionDirector17checkStrikeSphereERKN4sead7Vector3IfEEfbS5_","al::CollisionDirector::checkStrikeSphere(sead::Vector3<float> const&,float,bool,sead::Vector3<float> const&)",false
"_ZN2al17CollisionDirector16checkStrikeArrowERKN4sead7Vector3IfEES5_","al::CollisionDirector::checkStrikeArrow(sead::Vector3<float> const&,sead::Vector3<float> const&)",false
"_ZN2al17CollisionDirector26checkStrikeSphereForPlayerERKN4sead7Vector3IfEEf","al::CollisionDirector::checkStrikeSphereForPlayer(sead::Vector3<float> const&,float)",false
"_ZN2al17CollisionDirector15checkStrikeDiskERKN4sead7Vector3IfEEffS5_","al::CollisionDirector::checkStrikeDisk(sead::Vector3<float> const&,float,float,sead::Vector3<float> const&)",false
"_ZN2al17CollisionDirector18getStrikeArrowInfoEj","al::CollisionDirector::getStrikeArrowInfo(unsigned int)",false
"_ZNK2al17CollisionDirector21getStrikeArrowInfoNumEv","al::CollisionDirector::getStrikeArrowInfoNum(void)const",false
"_ZN2al17CollisionDirector19getStrikeSphereInfoEj","al::CollisionDirector::getStrikeSphereInfo(unsigned int)",false
"_ZNK2al17CollisionDirector22getStrikeSphereInfoNumEv","al::CollisionDirector::getStrikeSphereInfoNum(void)const",false
"_ZN2al17CollisionDirector17getStrikeDiskInfoEj","al::CollisionDirector::getStrikeDiskInfo(unsigned int)",false
"_ZNK2al17CollisionDirector20getStrikeDiskInfoNumEv","al::CollisionDirector::getStrikeDiskInfoNum(void)const",false
"_ZN2al17CollisionDirector32getSphereHitInfoArrayForColliderEPPNS_13SphereHitInfoEPj","al::CollisionDirector::getSphereHitInfoArrayForCollider(al::SphereHitInfo **,unsigned int *)",false
"_ZN2al17CollisionDirector30getDiskHitInfoArrayForColliderEPPNS_11DiskHitInfoEPj","al::CollisionDirector::getDiskHitInfoArrayForCollider(al::DiskHitInfo **,unsigned int *)",false
"_ZN2al17CollisionDirector7executeEv","al::CollisionDirector::execute(void)",false
"_ZNK2al17CollisionDirector30searchCollisionPartsWithSphereERKN4sead7Vector3IfEEfRNS1_10IDelegate1IPNS_14CollisionPartsEEEPKNS_24CollisionPartsFilterBaseE","al::CollisionDirector::searchCollisionPartsWithSphere(sead::Vector3<float> const&,float,sead::IDelegate1<al::CollisionParts *> &,al::CollisionPartsFilterBase const*)const",false
"_ZN2al17CollisionDirector30validateCollisionPartsPtrArrayEPN4sead8PtrArrayINS_14CollisionPartsEEE","al::CollisionDirector::validateCollisionPartsPtrArray(sead::PtrArray<al::CollisionParts> *)",false
"_ZN2al17CollisionDirector32invalidateCollisionPartsPtrArrayEv","al::CollisionDirector::invalidateCollisionPartsPtrArray(void)",false
"_ZNK2al17CollisionDirector25getCollisionPartsPtrArrayEv","al::CollisionDirector::getCollisionPartsPtrArray(void)const",false
